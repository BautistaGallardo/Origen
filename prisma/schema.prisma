// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model User {
  id            String          @id @unique @default(uuid())
  name          String
  lastName      String
  email         String          @unique
  password      String          @unique
  phone         String          @unique
  birthday      DateTime
  verified      Boolean?        @default(false)
  document      TypeDocument?
  patient       Patient?
  professional  Professional?
}

model Patient{
  id            String                    @id @unique @default(uuid())
  photo         String?                   @default("default.png")
  createdAt     DateTime?                 @default(now())
  updatedAt     DateTime?                 @updatedAt
  reservations  Reservation[]
  observation   AppointmentObservations?
  // foring Key user 
  userId        String                    @unique
  patient       User                      @relation(fields: [userId], references: [id])
  }

model TypeDocument{
  id              String    @id @unique @default(uuid())
  type            String
  IdentityNumber  String       @unique
  userId          String    @unique
  // foring key Patient
  user            User      @relation(fields: [userId], references: [id])
}
model Reservation{
  id                String              @id @unique @default(uuid()) 
  status            String              @default("pendiente")
  reservationDate   DateTime
  // foring key Patient
  patientId         String              @unique
  patient           Patient             @relation(fields: [patientId], references: [id])
  // foring key Appointment
  appointmentId     String              @unique
  appointment       MedicalAppointment  @relation(fields: [appointmentId], references: [id])

}
model Professional{
  id                  String                    @id @unique @default(uuid())
  photo               String?                   @default("default.png")
  speciality          String   
  createdAt           DateTime?                 @default(now())
  updatedAt           DateTime?                 @updatedAt
  medicalAppointment  MedicalAppointment[]
  observation         AppointmentObservations?
  // foring Key User
  userId              String                    @unique
  professional        User                      @relation(fields: [userId], references: [id])
}

model MedicalAppointment{
  id              String                    @id @unique @default(uuid()) 
  date            DateTime 
  timeStart       DateTime
  status          Int
  reservation     Reservation[]
  TypeAppointment TypeAppointment?
  observation     AppointmentObservations[]
  // foring key Professional
  professionalId  String
  professional    Professional              @relation(fields: [professionalId], references: [id])
}

model TypeAppointment{
  id              String              @id @unique @default(uuid())
  type            String
  description     String?
  // foring key Appointment
  appointmentId   String              @unique
  appointment     MedicalAppointment  @relation(fields: [appointmentId],references: [id])
}

model AppointmentObservations{
  id                String              @id @unique @default(uuid())
  note              String
  // foring key Patient
  patientId         String              @unique
  patient           Patient             @relation(fields: [patientId],references: [id])
  // foring key Pofessional
  pofessionalId     String              @unique
  pofessional       Professional        @relation(fields: [pofessionalId],references: [id])
  // foring key Appointment
  appointmenttId    String              @unique
  appointmentt      MedicalAppointment  @relation(fields: [appointmenttId],references: [id])
}

model AdminUser{
  id            String    @id @unique @default(uuid())
  name          String    @unique
  password      String    @unique
  createdAt     DateTime? @default(now())
  updatedAt     DateTime? @updatedAt
}